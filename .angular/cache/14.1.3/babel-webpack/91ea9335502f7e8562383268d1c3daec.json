{"ast":null,"code":"import { throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.productUrl = \"https://nu5m6h3hji.us-east-1.awsapprunner.com/products\"; ///'api/products/';\n    }\n\n    getProducts() {\n      return this.http.get(this.productUrl).pipe(tap(data => console.log('All: ' + JSON.stringify(data))), catchError(this.handleError));\n    }\n\n    handleError(err) {\n      let errorMessage = '';\n\n      if (err.error instanceof ErrorEvent) {\n        errorMessage = `An error occurred: ${err.error.message}`;\n      } else {\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}